{"version":3,"file":"Maybe.js","sourceRoot":"","sources":["../src/Maybe.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iCAAgC;AAEhC;;;;;;GAMG;AACH;IAA8B,yBAAQ;IAQpC;;;OAGG;IACH,eAAoB,MAAuB;QAAvB,uBAAA,EAAA,aAAuB;QAA3C,YACE,iBAAO,SAGR;QAJmB,YAAM,GAAN,MAAM,CAAiB;QAX3C,YAAM,GAAyB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACxD,YAAM,GAAwB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACtD,UAAI,GAAsB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAChD,eAAS,GAAuB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAWrD,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,MAAM,KAAK,IAAI,IAAI,KAAI,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC;;IACjE,CAAC;IAED;;;OAGG;IACH,sBAAM,GAAN;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,wBAAQ,GAAR;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,qBAAK,GAAL;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;QAC3D,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,MAAW,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACH,oBAAI,GAAJ,UAAK,MAA4B;QAC/B,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,MAAW,CAAC,GAAG,IAAkB,CAAC;IACzE,CAAC;IAED;;;;OAIG;IACH,mBAAG,GAAH,UAAI,SAAwB;QAC1B,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAkB,GAAG,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,MAAW,CAAC,CAAC,CAAC;IACpF,CAAC;IAED;;;;OAIG;IACH,sBAAM,GAAN,UAAO,KAAmB;QACxB,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAI,KAAK,CAAC,GAAG,IAAI,CAAC;IACnD,CAAC;IAED;;;;OAIG;IACH,uBAAO,GAAP,UAAQ,KAAmB;QACzB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;IACpC,CAAC;IAED;;;OAGG;IACH,sBAAM,GAAN;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,MAAW,CAAC;IACjD,CAAC;IAED;;;;OAIG;IACH,sBAAM,GAAN,UAAO,SAA4B;QAAnC,iBAEC;QADC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,SAAS,CAAC,CAAC,CAAC,GAAG,KAAI,GAAG,KAAK,CAAC,IAAI,EAAE,EAAlC,CAAkC,CAAC,CAAC;IAC5D,CAAC;IAED;;;;OAIG;IACH,wBAAQ,GAAR,UAAS,KAA+B;QACtC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;IACxD,CAAC;IAED;;;;;;OAMG;IACI,QAAE,GAAT,UAAa,KAAiC;QAAjC,sBAAA,EAAA,YAAiC;QAC5C,MAAM,CAAC,KAAK,YAAY,KAAK,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED;;;;;OAKG;IACI,UAAI,GAAX;QACE,MAAM,CAAC,KAAK,CAAC,EAAE,CAAI,IAAI,CAAC,CAAC;IAC3B,CAAC;IACH,YAAC;AAAD,CAAC,AAhID,CAA8B,aAAK,GAgIlC;AAhIY,sBAAK","sourcesContent":["import { Monad } from './Monad';\n\n/**\n * An interface that represents a value or the absences of a value.\n * @export\n * @class Maybe\n * @extends {Monad<T>}\n * @template T \n */\nexport class Maybe<T> extends Monad<T> {\n  isSome: Maybe<T>['hasValue'] = this.hasValue.bind(this);\n  orSome: Maybe<T>['orValue'] = this.orValue.bind(this);\n  some: Maybe<T>['value'] = this.value.bind(this);\n  isNothing: Maybe<T>['isNone'] = this.isNone.bind(this);\n\n  private readonly _isValue: boolean;\n\n  /**\n   * Creates an instance of Maybe.\n   * @param {(T | null)} [_value=null] \n   */\n  constructor(private _value: T | null = null) {\n    super();\n\n    this._isValue = this._value !== null && this._value !== void 0;\n  }\n\n  /**\n   * Whether the value is null or undefined.\n   * @returns {boolean} \n   */\n  isNone(): boolean {\n    return !this._isValue;\n  }\n\n  /**\n   * Whether there is a value other than undefined or null.\n   * @returns {boolean} \n   */\n  hasValue(): boolean {\n    return !this.isNone();\n  }\n\n  /**\n   * Returns the value held. If there is no value an error will be thrown.\n   * @returns {T} \n   */\n  value(): T {\n    if (this.isNone()) {\n      throw new Error('Can not get value \\'null\\' from Maybe');\n    }\n\n    return this._value as T;\n  }\n\n  /**\n   * Binds the Maybe to another Maybe.\n   * @param {(v: T) => Maybe<any>} bindFn \n   * @returns {Maybe<any>} \n   */\n  bind(bindFn: (v: T) => Maybe<any>): Maybe<any> {\n    return this.hasValue() ? bindFn(this._value as T) : this as Maybe<any>;\n  }\n\n  /**\n   * Maps the value.\n   * @param {(v: T) => any} transform \n   * @returns {Maybe<any>} \n   */\n  map(transform: (v: T) => any): Maybe<any> {\n    return this.isNone() ? this as Maybe<any> : Maybe.of(transform(this._value as T));\n  }\n\n  /**\n   * Returns this Maybe if there is a value or else returns the other Maybe or wrapped value.\n   * @param {(T | Maybe<T>)} other \n   * @returns {Maybe<T>} \n   */\n  orElse(other: T | Maybe<T>): Maybe<T> {\n    return this.isNone() ? Maybe.of<T>(other) : this;\n  }\n\n  /**\n   * Does the same thing as `orElse` excepts unwraps the value.\n   * @param {(T | Maybe<T>)} other \n   * @returns {T} \n   */\n  orValue(other: T | Maybe<T>): T {\n    return this.orElse(other).value();\n  }\n\n  /**\n   * Returns the value or null.\n   * @returns {(T | null)} \n   */\n  orNull(): T | null {\n    return this.isNone() ? null : this._value as T;\n  }\n\n  /**\n   * Filters the value of this Maybe.\n   * @param {(v: T) => boolean} predicate \n   * @returns {Maybe<T>} \n   */\n  filter(predicate: (v: T) => boolean): Maybe<T> {\n    return this.bind(v => predicate(v) ? this : Maybe.none());\n  }\n\n  /**\n   * Returns a Maybe with null if the boolean flag is true.\n   * @param {boolean | Maybe<boolean>} value \n   * @returns {Maybe<T>} \n   */\n  orNoneIf(value: boolean | Maybe<boolean>): Maybe<T> {\n    return Maybe.of(value).orNull() ? Maybe.none() : this;\n  }\n\n  /**\n   * Creates a Maybe with the given value.\n   * @static\n   * @template U \n   * @param {(U | Maybe<U> | null)} value \n   * @returns {Maybe<U>} \n   */\n  static of<U>(value: U | Maybe<U> | null = null): Maybe<U> {\n    return value instanceof Maybe ? value : new Maybe(value);\n  }\n\n  /**\n   * Creates an empty Maybe.\n   * @static\n   * @template U \n   * @returns {Maybe<U>} \n   */\n  static none<U>(): Maybe<U> {\n    return Maybe.of<U>(null);\n  }\n}"]}